#############################################################################################
# General settings for TAP                                                                  #
# The full installation profile used and the ingress address + default registry is set here #
#############################################################################################
profile: full

ceip_policy_disclosed: true

shared:
  ingress_domain: nilab.io
  ingress_issuer: ""
  image_registry: 
    project_path: harbor.nilab.io/tap/build-service
    secret:
      name: tap-registry
      namespace: tap-install

tap_telemetry:
  customer_entitlement_account_number: ""

supply_chain: testing_scanning

metadata_store:
  ns_for_export_app_cert: "*"

#############################################################################################
# Use a git repository for K8S yaml distribution (using GitOps instead of RegistryOps)      #
#############################################################################################
#ootb_supply_chain_testing_scanning:
#  gitops:
#    ssh_secret: git-https-secret
#    branch: main
#    commit_message: "Update from TAP Supply Chain Choreographer"
#    server_address: https://github.com/
#    repository_owner: viktoriousss  # github-account
#    repository_name: tap-deliveries # github-repository

#############################################################################################
# The namespace provisioner is responsible for setting up developer namespaces in your      #
# environment. The configuration is contained on a Git Repository and contains the          #
# namespaces to be created ws well as the default resources that should be added to these   #
# namespaces.                                                                               #
#############################################################################################
namespace_provisioner:
  controller: false
  sync_period: 30s
  # Namespace provisioner - list of namespaces
  gitops_install:
    ref: origin/main
    subPath: tap/ns-provisioner/namespaces
    url: https://github.com/coyte/tanzu-demo-essentials.git

  # Namespace provisioner - additional resources
  additional_sources:
    - git:
        url: https://github.com/coyte/tanzu-demo-essentials.git  
        ref: origin/main
        subPath: tap/ns-provisioner/namespaces-resources        
#        secretRef:
#          name: git-https-secret # this is the new credential
 #         namespace: tap-install
          #create_export: true

  #import_data_values_secrets:
  #  - name: git-https-secret
  #    namespace: tap-install
  #    create_export: true
  
  # This account is used for doing GitOps with Supply Chain Choreographer
#  default_parameters:
#    supply_chain_service_account:
#      secrets:
#      - git-https-secret

#############################################################################################
# Local source proxy configuration - this is used by Tanzu Developer Portal to upload       #
# local sourcecode to this repository.                                                      #
#                                                                                           #
# Secrets (lsp-push-credentials & lsp-pull-credentials) should be exported, either through  #
# create_export: true or a secret export YAML. See ./secrets/lsp-secrets.example.yaml 
# ********
# Create the .dockerconfigjson: string by doing a docker login on linux and base64 encondig #
# the reulting ~/.docker/config.json (use -w0 to avoid linesplit)
#############################################################################################
local_source_proxy:
  repository: "harbor.nilab.io/local-tap/vscode-tmp"
  push_secret:
    name: lsp-push-credentials
    namespace: tap-install
    create_export: false
  
  pull_secret:
    name: lsp-pull-credentials
    namespace: tap-install
    create_export: false

#############################################################################################
# Configuration of TAP-GUI specific settings                                                #
#############################################################################################
tap_gui:
  # TLS certificate configuration for TAP-GUI
#  tls:
#    namespace: cert-manager
#    secretName: tap-gui
  app_config:
    app:
      baseUrl: http://tap-gui.nilab.io
    customize:
      custom_name: "Nilab.io Developer Portal"
    organization:
      name: "nilab.io"
    # GitHub authentication configuration
    auth:
      allowGuestAccess: false
      environment: development
      providers:
        github: # This is for github OAuth authentication to the TAP portal. Configure a new OAuth app for TAP here: https://github.com/settings/developers. Homepage URL is http://tap-gui.<ingress-domain configured earlier>.
          development:
            clientId: "9a8b2fc60cfdd904ce82"  # you need to get this value from GitHub Developer Settings OAuth2 page
            clientSecret: "7070bf061ee03cbecb0492776e069aa5015ae0b1"
    backend:
      database:
        client: pg
        connection:
          host: postgresql.tanzu-postgres.svc.cluster.local
          port: 5432
          user: tapgui
          password: h3@EHen@F7w3
          ssl: false
#
#excluded_packages:
#  - crossplane.tanzu.vmware.com
#  - bitnami.services.tanzu.vmware.com
# Add custom Backstage plugins here                                                         #
#package_overlays:
#- name: tap-gui
#  secrets:
#  - name: tdp-app-image-overlay-secret